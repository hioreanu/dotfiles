#!/bin/sh
# $Id$

keysetup() {
	host="$1"
	version="$2"
	echo "Found ${version}"
	case "${version}" in
		*OpenSSH*)
			echo "Setting up OpenSSH keys on ${host}..."
			ssh ${host} 'umask 077 ; mkdir "$HOME/.ssh" ; cat >> "$HOME/.ssh/authorized_keys"' < "$HOME/.ssh/id_dsa.pub"
			echo ok
			;;
		*SSH\ Secure\ Shell*)
			echo "Setting up ssh.com keys on ${host}..."
			ssh ${host} 'umask 077 ; mkdir "$HOME/.ssh2" ; echo Key ach0.ssh.com-dss >> "$HOME/.ssh2/authorization" ; cat > "$HOME/.ssh2/ach0.ssh.com-dss"' < "$HOME/.ssh2/ach0.ssh.com-dss"
			echo ok
			;;
		*)
			echo "Can't figure out key setup for server type $SSHVER"
			return 1
			;;
	esac
	return 0
}

copyto() {
	host="$1"
	src="$2"
	echo "Copying ${src} to ${host}..."
	scp -r "${src}" "${host}:" && echo ok
}

executeon() {
	host="$1"
	cmd="$2"
	echo "Executing ${cmd} on ${host}..."
	ssh "${host}" "${cmd}" && echo ok
}

SSHOUT_TMP="/tmp/newbox.sshout.$$"

cleanup() {
	rm -f "${SSHOUT_TMP}"
}
trap cleanup 0

if [ $# -ne 1 ] ; then
	echo "Usage: $0 <hostname>"
	echo "Sets up ssh public keys and shell environment on <hostname>"
	exit 1
fi

if [ "`ssh -V 2>&1 | fgrep OpenSSH | wc -l`" -lt 1 ] ; then
	echo "Don't know how to use your ssh client, quitting."
	exit 1
fi

host="$1"

ssh -oBatchmode=yes -v -v -v "${host}" exit < /dev/null 2> ${SSHOUT_TMP} > /dev/null 
if [ $? -ne 0 ] ; then
	remotever="`awk '/remote software version/ { sub(/.*,/, \"\"); print; }' ${SSHOUT_TMP}`"
	if [ -z "${remotever}" ] ; then
		echo "Could not figure out remote ssh version for ${host}"
		exit 1
	fi
	keysetup "${host}" "${remotever}" || exit 1
fi

executeon "${host}" 'echo '"'"'PATH="$PATH:/opt/bin:/usr/local/bin"'"'"' >> "$HOME/.zshenv"'
copyto "${host}" "${HOME}/dotfiles"
executeon "${host}" "dotfiles/mklinks.sh"
